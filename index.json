[{"authors":["admin"],"categories":null,"content":"Hello! My name is Animesh Singh Chouhan. I am an Indian Institute of Technology Kharagpur graduate with an interest in machine learning, backend development, cloud computing, embedded systems and robotics. Seeking an opportunity to apply my experience in a field of interest through research. .button-resume { appearance: button; background-color: #3FCAFF; border: none; color: white; padding: 5px 20px 5px 20px; border-radius: 8px; text-align: center; text-decoration: none; display: inline-block; font-size: 20px; margin-left: 10px; } a.button-resume:hover { color: white; }  --   Download my resumÃ©. Resume -- ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Hello! My name is Animesh Singh Chouhan. I am an Indian Institute of Technology Kharagpur graduate with an interest in machine learning, backend development, cloud computing, embedded systems and robotics. Seeking an opportunity to apply my experience in a field of interest through research. .button-resume { appearance: button; background-color: #3FCAFF; border: none; color: white; padding: 5px 20px 5px 20px; border-radius: 8px; text-align: center; text-decoration: none; display: inline-block; font-size: 20px; margin-left: 10px; } a.","tags":null,"title":"Animesh Singh Chouhan","type":"authors"},{"authors":null,"categories":null,"content":"Program to solve the wordle puzzle\nGithub: wordle-solver\nAbout \u0026ldquo;Wordle,\u0026rdquo; Wikipedia, The Free Encyclopedia:\nWordle is a web-based word game created and developed by Welsh software engineer Josh Wardle. Players have six attempts to guess a five-letter word, with feedback given for each guess in the form of colored tiles indicating when letters match or occupy the correct position.\nRunning Cloning the repository git clone https://github.com/animesh-chouhan/wordle-solver.git cd wordle-solver  Install requirements pip install -r requirements.txt  Run python3 main.py 2\u0026gt; log.txt  Example Output Word is: phony\nGuessed in 4 tries\nWordle 862 4/6\nâ¬œðŸŸ¨â¬œâ¬œðŸŸ©\nâ¬œðŸŸ¨ðŸŸ©â¬œðŸŸ©\nðŸŸ©â¬œðŸŸ©ðŸŸ©ðŸŸ©\nðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©\nBuilt With  pyppeteer - Python port of puppeteer JavaScript (headless) chrome/chromium browser automation library  ","date":1698451200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1698451200,"objectID":"fd6aca023dbc3abcc34109ee63062445","permalink":"/project/wordle-solver/","publishdate":"2023-10-28T00:00:00Z","relpermalink":"/project/wordle-solver/","section":"project","summary":"Program to solve the wordle puzzle","tags":["Web"],"title":"Wordle Solver","type":"project"},{"authors":null,"categories":null,"content":"Why would I want my dotfiles on GitHub?   Backup, restore, and sync the prefs and settings for your toolbox. Your dotfiles might be the most important files on your machine.\n  Learn from the community. Discover new tools for your toolbox and new tricks for the ones you already use.\n  Share what youâ€™ve learned with the rest of us.\n  Which dotfiles should I really manage on Github? You can put .profile, .bashrc, .nvimrc, .vimrc and others on Github.\nHow do you manage your dotfiles? Here are the steps:\n  Make a repository named dotfiles on your Github.\n  Clone it in your home directory.\n  git clone https://github.com/\u0026lt;user-name\u0026gt;/dotfiles.git  Create hard links of the dotfiles you want to manage. Eg:  ln ~/.bashrc ~/dotfiles/.bashrc  Commit and push to your repo.  git add . git commit -m \u0026quot;add dotfiles\u0026quot; git push  Use my dotfiles  Warning: If you want to give these dotfiles a try, you should first fork this repository, review the code, and remove things you donâ€™t want or need. Donâ€™t blindly use my settings unless you know what that entails. Use at your own risk!   Link to the repository: dotfiles\nHere are the steps:\n Clone and cd in my dotfiles repo in your home directory.  cd ~ git clone https://github.com/animesh-chouhan/dotfiles.git cd dotfiles  Run install.sh  chmod a+x install.sh ./install.sh  This will create hard links of my dotfiles to your home directory.\nSources:  dotfiles smalleycreative\u0026rsquo;s blog satorusasozaki\u0026rsquo;s blog mathiasbynens dotfiles  Did you find this page helpful? Consider sharing it ðŸ™Œ ","date":1627948800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1627948800,"objectID":"136e1fc68ee73aa2bc4be06bc714163d","permalink":"/post/dotfiles-github/","publishdate":"2021-08-03T00:00:00Z","relpermalink":"/post/dotfiles-github/","section":"post","summary":"Why would I want my dotfiles on GitHub?   Backup, restore, and sync the prefs and settings for your toolbox. Your dotfiles might be the most important files on your machine.\n  Learn from the community. Discover new tools for your toolbox and new tricks for the ones you already use.\n  Share what youâ€™ve learned with the rest of us.\n  Which dotfiles should I really manage on Github?","tags":null,"title":"Manage your dotfiles on Github","type":"post"},{"authors":null,"categories":null,"content":" Web interface for VCF Creator\n Live Website: https://vcf.animeshchouhan.com\nGithub: https://github.com/animesh-chouhan/vcf-creator-web-interface\nSetup Cloning the repository # Clone the repo git clone https://github.com/animesh-chouhan/vcf-creator-web-interface.git cd vcf-creator-web-interface  Installing dependencies Using pip and requirements.txt:\npip install -r requirements.txt  Using Pipenv:\npipenv shell pipenv install  Running the script # Make view.sh executable chmod a+x view.sh ./view.sh  Docker docker run --rm -it -p 8080:8080/tcp animeshchouhan/vcf-creator-web-interface  Built With  vcf-creator - Command-line program to generate vCard file from CSV  Contributing  Fork the repo (https://github.com/animesh-chouhan/vcf-creator-web-interface/) Create your feature branch (git checkout -b feature/fooBar) Commit your changes (git commit -am 'Add some fooBar') Push to the branch (git push origin feature/fooBar) Create a new Pull Request  License MIT License copyright (c) 2021 Animesh Singh Chouhan. Please have a look at the license for more details.\n","date":1625443200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1625443200,"objectID":"c514acf523a95bd23d1b7191043b5f42","permalink":"/project/vcf_web_interface/","publishdate":"2021-07-05T00:00:00Z","relpermalink":"/project/vcf_web_interface/","section":"project","summary":"Web Interface to generate vCard file from CSV","tags":["Web","VCF","vCard"],"title":"VCF Web Interface","type":"project"},{"authors":null,"categories":null,"content":" Generate vCard file from CSV\n Live Website: https://vcf.animeshchouhan.com\nGithub: https://github.com/animesh-chouhan/vcf-creator\nUsage example Setup Cloning the repository # Clone the repo git clone https://github.com/animesh-chouhan/vcf-creator.git cd vcf-creator # Run the sample csv file python3 -m vcf_creator sample.csv  Running tests # If in vc-creator folder cd vcf_creator/tests # Run the test python3 test_vcf.py  Installation To install it right away, type:\npip3 install vcf_creator  Help python3 -m vcf_creator --help  OR\nvcf_creator --help  Running the script python3 -m vcf_creator \u0026lt;csv-file-name\u0026gt;  OR\nvcf_creator \u0026lt;csv-file-name\u0026gt;  Import the module in your project from vcf_creator import vcard_formatter, vcard_generator vcard_formatter(arguments) vcard_generator(arguments)  CSV File Instructions  The contact CSV file can have the following headers all in smallcase:  name phone organisation email address birthday (mm/dd/yyyy)   The headers can be in any order Make sure that no fields are empty  Contributing  Fork the repo (https://github.com/animesh-chouhan/vcf-creator/) Create your feature branch (git checkout -b feature/fooBar) Commit your changes (git commit -am 'Add some fooBar') Push to the branch (git push origin feature/fooBar) Create a new Pull Request  License MIT License copyright (c) 2021 Animesh Singh Chouhan. Please have a look at the license for more details.\n","date":1624924800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1624924800,"objectID":"e02196c821e3860a0d65405656fe52ea","permalink":"/project/vcf_creator/","publishdate":"2021-06-29T00:00:00Z","relpermalink":"/project/vcf_creator/","section":"project","summary":"Generate vCard file from CSV","tags":["Web","VCF","vCard"],"title":"VCF Creator","type":"project"},{"authors":null,"categories":null,"content":"A simple yet powerful script to download and manage local copies of youtube music playlists. It wraps over the youtube-dl downloader and maintains an archive of downloaded songs. It also updates them automatically if a cronjob is configured. More Info\nSetup Cloning the repository: #clone the repo git clone https://github.com/animesh-chouhan/yt-comment-scraper.git cd youtube-playman  Running the script: #run the script directly chmod +x ./youtube-playman.sh ./youtube-playman.sh OR #create a hard link to the local binary folder #this will add the downloader to the path variable ln ./youtube-playman.sh ~/.local/bin/youtube-playman #directly running the script youtube-playman  Installation: To install it right away for all UNIX users (Linux, macOS, etc.), type:\ncurl -L https://github.com/animesh-chouhan/youtube-playman/releases/latest/download/youtube-playman -o ~/.local/bin/youtube-playman chmod a+rx ~/.local/bin/youtube-playman  If you do not have curl, you can alternatively use a recent wget:\nwget https://github.com/animesh-chouhan/youtube-playman/releases/latest/download/youtube-playman -O ~/.local/bin/youtube-playman chmod a+rx ~/.local/bin/youtube-playman  Add Jobs To cron: #creating a cron job that will update the playlists automatically crontab -e  #this will open a editor and add this entry to the file #don't forget the newline after the last entry PATH=\u0026quot;/usr/local/bin:/usr/bin:/bin:/home/\u0026lt;your-username\u0026gt;/.local/bin\u0026quot; @daily printf \u0026quot;update-all\u0026quot; | youtube-playman #OR PATH=\u0026quot;/usr/local/bin:/usr/bin:/bin:/home/\u0026lt;your-username\u0026gt;/.local/bin\u0026quot; @daily printf \u0026quot;update-all\u0026quot; | download \u0026gt; $HOME/Music/cron.log 2\u0026gt;\u0026amp;1;echo `date` \u0026gt;\u0026gt; $HOME/Music/cron.log  For more details refer to ubuntu cron wiki.\nUsage example Click on the play button to see an example download. \nFor more examples and usage, please refer to the Wiki.\nBuilt With  youtube-dl - Command-line program to download videos from YouTube  Contributing  Fork the repo (https://github.com/animesh-chouhan/youtube-playman/) Create your feature branch (git checkout -b feature/fooBar) Commit your changes (git commit -am 'Add some fooBar') Push to the branch (git push origin feature/fooBar) Create a new Pull Request  License MIT License copyright (c) 2020 Animesh Singh Chouhan. Please have a look at the license for more details.\n","date":1587945600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1587945600,"objectID":"0d411815c6e0ca49b131ed77a60987f1","permalink":"/project/youtube_playman/","publishdate":"2020-04-27T00:00:00Z","relpermalink":"/project/youtube_playman/","section":"project","summary":"Downloads and updates local copies of YouTube Playlists.","tags":["Web","Youtube"],"title":"Youtube Playman","type":"project"},{"authors":null,"categories":null,"content":"List of web compatible simulations and vizualizations:\n Cycloid Particles-1 Particles-2  Contributing  Fork the repo (https://github.com/animesh-chouhan/mathism/) Create your feature branch (git checkout -b feature/fooBar) Commit your changes (git commit -am 'Add some fooBar') Push to the branch (git push origin feature/fooBar) Create a new Pull Request  License MIT License copyright (c) 2020 Animesh Singh Chouhan. Please have a look at the license for more details.\n","date":1579478400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579478400,"objectID":"3c09c208cc7228e4c8eef14bfcec984a","permalink":"/project/mathism/","publishdate":"2020-01-20T00:00:00Z","relpermalink":"/project/mathism/","section":"project","summary":"Web compatible simulations and vizualizations.","tags":["Web"],"title":"Mathism","type":"project"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Math Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file.\nTo render inline or block math, wrap your LaTeX math with $...$ or $$...$$, respectively.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left |\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right |^2}$$\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the \\\\ math linebreak:\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\ 1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$  renders as\n$$f(k;p_0^) = \\begin{cases} p_0^ \u0026amp; \\text{if }k=1, \\\n1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ```  renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2]  An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ```  renders as\ngantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d  An example class diagram:\n```mermaid classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() } ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() }  An example state diagram:\n```mermaid stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] ```  renders as\nstateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*]  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Asides Academic supports a shortcode for asides, also referred to as notices, hints, or alerts. By wrapping a paragraph in {{% alert note %}} ... {{% /alert %}}, it will render as an aside.\n{{% alert note %}} A Markdown aside is useful for displaying notices, hints, or definitions to your readers. {{% /alert %}}  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.   Did you find this page helpful? Consider sharing it ðŸ™Œ ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":null,"categories":null,"content":"A python script to scrape C++ documentation website and generate printable PDF documents. More Info\nSetup Linux: Cloning the repository:\n#clone the repo $git clone https://github.com/animesh-chouhan/cpp-docs-printer.git $cd cpp-docs-printer  Installing the dependencies:\n#install python3-pip $sudo apt-get install python3-pip #requests $sudo pip3 install requests #beautifulsoup4 $sudo pip3 install beautifulsoup4 #weasy-print $sudo apt-get install build-essential python3-dev python3-pip python3-setuptools python3-wheel python3-cffi libcairo2 libpango-1.0-0 libpangocairo-1.0-0 libgdk-pixbuf2.0-0 libffi-dev shared-mime-info $sudo pip3 install WeasyPrint  Running the python script:\n$python3 cplusplus.py http://www.cplusplus.com/reference/cstdio/  Usage example Sample C++ documentation http://www.cplusplus.com/reference/cstdio/:\nSample pdf generated pdf:\nThe generated .html and .pdf files are located in the html and pdf folders respectively.\nFor more examples and usage, please refer to the Wiki.\nBuilt with  requests - Requests is an elegant and simple HTTP library for Python, built for human beings. beautifulsoup - Beautiful Soup is a library that makes it easy to scrape information from web pages. weasyprint - WeasyPrint is a smart solution helping web developers to create PDF documents.  Contributing  Fork the repo (https://github.com/animesh-chouhan/cpp-docs-printer/) Create your feature branch (git checkout -b feature/fooBar) Commit your changes (git commit -am 'Add some fooBar') Push to the branch (git push origin feature/fooBar) Create a new Pull Request  License MIT License copyright (c) 2020 Animesh Singh Chouhan. Please have a look at the license for more details.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"a3fb94554927a9128ea61b53e6552824","permalink":"/project/cpp_docs_printer/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/cpp_docs_printer/","section":"project","summary":"Generates PDF documents from the C++ documentation","tags":["Web","C++"],"title":"C++ Docs Printer","type":"project"},{"authors":null,"categories":null,"content":"Scrapes all the comments from all videos present in a YouTube channel. Can also be used to get the video list from a given YouTube channel.\nSetup Linux:\n#clone the repo git clone https://github.com/animesh-chouhan/yt-comment-scraper.git cd yt-comment-scraper #install python3 sudo apt-get install python3 #install node and npm sudo apt-get install nodejs sudo apt-get install npm #install dependencies npm install express --save npm install puppeteer --save #run the api on localhost node scraper_api.js #testing the python scraper python3 scraper.py ./to_scrape_sample.txt #create a new text file with links to be scraped separated by newlines python3 scraper.py ./your_text_file.txt  Usage example Sample resonse of api hosted on localhost:\nSample comments scraped:\nFor more examples and usage, please refer to the Wiki.\nBuilt With  Puppeteer - Headless browser to overcome pagination ytcomments - Comment API  Contributing  Fork the repo (https://github.com/animesh-chouhan/yt-comment-scraper/) Create your feature branch (git checkout -b feature/fooBar) Commit your changes (git commit -am 'Add some fooBar') Push to the branch (git push origin feature/fooBar) Create a new Pull Request  ","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"6f40777f93cfde4950a610769c9fe0e1","permalink":"/project/youtube_comment_scraper/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/youtube_comment_scraper/","section":"project","summary":"Scrapes the comments from videos present in a YouTube channel.","tags":["Web","Youtube"],"title":"Youtube Comment Scraper","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1120521600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1120521600,"objectID":"5302252e8f3539312931c7276cda35e3","permalink":"/project/project2/","publishdate":"2005-07-05T00:00:00Z","relpermalink":"/project/project2/","section":"project","summary":"An example of using the in-built project page.","tags":["Web"],"title":"Coming Soon","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1120521600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1120521600,"objectID":"68fe1e900090392e3d2a97574964bc5a","permalink":"/project/project3/","publishdate":"2005-07-05T00:00:00Z","relpermalink":"/project/project3/","section":"project","summary":"An example of using the in-built project page.","tags":["Web"],"title":"Coming Soon","type":"project"}]